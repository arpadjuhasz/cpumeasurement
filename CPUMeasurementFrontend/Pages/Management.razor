@using CPUMeasurementFrontend.Data
@using CPUMeasurementCommon.DataObjects
@inject ManagementService service

@page "/management"

@code {
    private List<ClientData> _result;
    private int _measurementInterval;

    protected override async Task OnInitializedAsync() => _result = await service.GetConnectedClients();

    private void UpdateMeasurementInterval(string clientIPAddress, int measurementInterval)
    {
        this._measurementInterval = measurementInterval;
        service.UpdateMeasurementInterval(clientIPAddress, measurementInterval);
    }
}

<h1>@_measurementInterval</h1>
<table>
    <thead>
        <tr>
            <td>IP</td>
            <td>Last updated</td>
            <td>CPU</td>
            <td>Desktop name</td>
            <td>Measurement interval</td>
        </tr>
    </thead>
    <tbody>
        @if (_result != null)
        @foreach (var item in _result)
        {
        <tr>
            <td>@item.IPv4Address</td>
            <td>@item.LastUpdate</td>
            <td>@item.CPUName</td>
            <td>@item.ComputerName</td>
            <td><input type="number" @bind="@item.MeasurementInterval" /><button @onclick="@(e => UpdateMeasurementInterval(item.IPv4Address, item.MeasurementInterval))" class="btn btn-success">Update</button>></td>
        </tr>
        }
    </tbody>
</table>