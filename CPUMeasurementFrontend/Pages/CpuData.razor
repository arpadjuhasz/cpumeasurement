@page "/cpudata"
@using CPUMeasurementFrontend.Data
@using CPUMeasurementCommon.DataObjects
@inject CPUDataService service
@inject NavigationManager navigationManager
@inject HttpClient  httpClient
@code {
    private List<CPUData> _result;
    private DateTime _date = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        if (httpClient.DefaultRequestHeaders.Authorization == null || string.IsNullOrEmpty(httpClient.DefaultRequestHeaders.Authorization.Parameter))
        { 
            navigationManager.NavigateTo("login", true);
        }
        else
        { 
            _result = await service.GetCPUData();
        }
    }

    protected async Task GetCPUDataByDate() => _result = await service.GetCPUDataByDate(_date);
}

<input type="date" @bind="@_date" />
<button class="btn btn-info" @onclick="@GetCPUDataByDate">Filter</button>

<table>
    <thead>
        <tr>
            <td>Received</td>
            <td>IPv4</td>
            <td>Temperature</td>
            <td>Avg. Load</td>
        </tr>
    </thead>
    @if (_result != null)
    {
        <tbody>
            @foreach (var item in _result)
            {
                <tr>
                    <td>@item.Received.ToLocalTime()</td>
                    <td>@item.IPAddress</td>
                    <td>@item.Temperature.Value @item.Temperature.MeasurementUnit.ToString()[0]</td>
                    <td>@item.AverageLoad %</td>
                </tr>
            }
        </tbody>
    }
</table>
